version: '3.8'


volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './prometheus_operational_data'
  grafana_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './grafana_operational_data'    


x-environment-admin: &Admin_ENV
   - ADMIN_USER=${ADMIN_USER}
   - ADMIN_PASSWORD=${ADMIN_PASSWORD}
   - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH}
x-evironment-telegram: &Telegram_ENV
    - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    - TELEGRAM_CHATID=${TELEGRAM_CHATID}
    - TELEGRAM_ADMIN=${TELEGRAM_CHATID}
x-environment-grafana: &Grafana_ENV
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
    - GF_USERS_ALLOW_SIGN_UP=false

networks:
  monitor-net:
    driver: bridge

x-logging: &logging
 driver: "json-file"
 options:
   max-size: "100m"
   max-file: "1"


x-resources: &resources_common
    limits:
      cpus: ${DOCKER_COMMON_CPU:-0.4}
      memory: ${DOCKER_COMMON_MEM:-100MB}

x-resoures: &resources_main
    limits: 
      cpus: ${DOCKER_MAIN_CPU:-0.6}
      memory: ${DOCKER_MAIN_MEM:-1GB}

services:

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./PrometheusStack/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    deploy:  
      resources: *resources_main
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"

  alertmanager-bot:
    container_name: alertmanager-bot
    command:
      - --alertmanager.url=http://alertmanager:9093
      - --log.level=info
      - --store=bolt
      - --bolt.path=/data/bot.db
    environment: *Telegram_ENV
    #secrets: *Telegram_SRT
    image: metalmatze/alertmanager-bot:0.4.3
    ports:
      - "8082:8080"
    networks:
      - monitor-net
    restart: unless-stopped
    volumes:
      - ./PrometheusStack/alertmanager-bot:/data
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    environment: *Telegram_ENV
    volumes:
      - ./PrometheusStack/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox-exporter
    expose:
     - 9115
    networks:
     - monitor-net
    restart: unless-stopped
    volumes:
     - ./PrometheusStack/blackbox:/config
    command: --config.file=/config/blackbox.yml
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  grafana:
    image: grafana/grafana:9.4.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./PrometheusStack/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./PrometheusStack/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment: *Grafana_ENV
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    deploy:  
      resources: *resources_main
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    expose:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common


  promtail:
    image: grafana/promtail:2.3.0
    container_name: promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  pushgateway:
    image: prom/pushgateway:v1.5.1
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common

  caddy:
    image: caddy:2.6.4
    container_name: caddy
    ports:
      - "3000:3000"
      - "3100:3100"
      - "8080:8080"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
      - "9115:9115"
      - "8081:8081"
    volumes:
      - ./PrometheusStack/caddy:/etc/caddy
    environment: *Admin_ENV
    restart: unless-stopped
    networks:
      - monitor-net
    logging: *logging
    labels:
      org.label-schema.group: "monitoring"
    deploy:  
      resources: *resources_common